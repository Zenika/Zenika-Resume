version: 2.1

jobs:
  ui-install-dependencies:
    docker:
      - image: node:5.7
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-ui-dependencies-{{ checksum "package.json" }}
            - v1-ui-dependencies-
      - run:
          name: Download UI dependencies
          command: |
            # This brings global node_modules into the current file system layer so that
            # npm can then be updated correctly. See https://github.com/npm/npm/issues/13306
            # and https://blog.cloud66.com/using-node-with-docker/
            # Then update npm to avoid this bug: https://github.com/npm/cli/issues/681
            # NOTE: these 3 commands need to be run all at once
            mv /usr/local/lib/node_modules /usr/local/lib/node_modules.tmp \
              && mv /usr/local/lib/node_modules.tmp /usr/local/lib/node_modules \
              && npm install --quiet --global npm@3.10.10
            npm install --quiet
      - save_cache:
          paths:
            - node_modules
          key: v1-ui-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: ./
          paths:
            - node_modules

  server-install-dependencies:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - run: npm --prefix server ci
      - persist_to_workspace:
          root: ./
          paths:
            - server/node_modules

  ui-build:
    docker:
      - image: node:5.7
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run: npm run build
      - persist_to_workspace:
          root: ./
          paths:
            - build

  deploy-hasura:
    parameters:
      hasura-deploy-dir:
        type: string
        default: ../hasura
      hasura-clever-app-id:
        type: string
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - run:
          name: Package Hasura
          command: |
            mkdir --parents << parameters.hasura-deploy-dir >>
            cp ./.hasura/hasura-clever-cloud.Dockerfile << parameters.hasura-deploy-dir >>/Dockerfile
      - run:
          name: Deploy Hasura
          working_directory: << parameters.hasura-deploy-dir >>
          command: |
            git config --global user.email "dsi@zenika.com"
            git config --global user.name "Zenika"
            git init
            git add .
            git commit -m "deploy!"
            sudo npm install --global clever-tools
            clever login --secret=$CLEVER_SECRET --token=$CLEVER_TOKEN
            clever link << parameters.hasura-clever-app-id >>
            clever deploy --force

  run-migrations:
      docker:
        - image: hasura/graphql-engine:v1.3.2.cli-migrations-v2
      parameters:
        hasura-admin-secret:
          type: string
        hasura-endpoint:
          type: string
      steps:
        - checkout
        - run:
            name: Apply migrations
            working_directory: .hasura
            command: hasura-cli migrate apply --admin-secret << parameters.hasura-admin-secret >> --endpoint << parameters.hasura-endpoint >>
        - run:
            name: Apply metadata
            working_directory: .hasura
            command: hasura-cli metadata apply --admin-secret << parameters.hasura-admin-secret >> --endpoint << parameters.hasura-endpoint >>

  deploy:
    docker:
      - image: circleci/node:lts
    parameters:
      clever-app-id:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Package deployment artifact
          command: |
            mkdir ~/deploy
            cd ~/deploy
            cp -r ~/project/build build
            cp -r ~/project/server server
            mkdir -p ~/artifacts
            tar cfz ~/artifacts/zenika-resume-${CIRCLE_TAG:-${CIRCLE_SHA1}}.tar.gz ~/deploy
      - store_artifacts:
          path: ~/artifacts
      - run:
          name: Deploy to Clever Cloud
          working_directory: ~/deploy
          command: |
            git config --global user.email "dsi-ext@zenika.com"
            git config --global user.name "Zenika"
            git init
            git add .
            git commit -m "deploy!"
            sudo npm install --global clever-tools
            clever login --token=$CLEVER_TOKEN --secret=$CLEVER_SECRET
            clever link << parameters.clever-app-id >>
            clever deploy --force

workflows:
  version: 2

  deploy:
    jobs:
      - ui-install-dependencies:
          filters:
            tags:
              only: /.*/
      - server-install-dependencies:
          filters:
            tags:
              only: /.*/
      - ui-build:
          requires:
            - ui-install-dependencies
          filters:
            tags:
              only: /.*/
      
      - deploy-hasura:
          name: deploy-hasura-staging
          hasura-clever-app-id: app_69c5464d-594e-4c48-863b-07cd050dbfe4
          requires:
            - ui-build
            - server-install-dependencies
          context: clever-cloud2-zenika-dev
          filters: &deploy-staging-filters
            branches:
              only: upgrade_hasura
      - run-migrations:
          name: run-migrations-staging
          hasura-admin-secret: $HASURA_ADMIN_SECRET_STAGING
          hasura-endpoint: $HASURA_ENDPOINT_STAGING
          requires:
            - deploy-hasura-staging
          filters: *deploy-staging-filters
      - deploy:
          name: deploy-staging
          clever-app-id: app_41f798bc-7a32-4426-aa13-16d5a9326d30
          requires:
            - run-migrations-staging
          context: clever-cloud2-zenika-dev
          filters: *deploy-staging-filters

      - deploy-hasura:
          name: deploy-hasura-production
          hasura-clever-app-id: app_a8b7bb4b-ac7b-4c38-b7b8-29bfb71c9fd1
          requires:
            - ui-build
            - server-install-dependencies
          context: clever-cloud2-zenika-dev
          filters: &deploy-production-filters
            branches:
              ignore: /.*/
            tags:
              only: /v.+/
      - run-migrations:
          name: run-migrations-production
          hasura-admin-secret: $HASURA_ADMIN_SECRET_PROD
          hasura-endpoint: $HASURA_ENDPOINT_PROD
          requires:
            - deploy-hasura-production
          context: clever-cloud2-zenika-dev
          filters: *deploy-production-filters
      - deploy:
          name: deploy-production
          clever-app-id: app_0f9c5731-aae3-4bf3-89c7-781157ec985a
          requires:
            - run-migrations-production
          context: clever-cloud2-zenika-dev
          filters: *deploy-production-filters
